crystal_doc_search_index_callback({"repository_name":"zip64","body":"# crystal-zip64\n\n[![Crystal CI](https://github.com/crystal-garage/crystal-zip64/actions/workflows/crystal.yml/badge.svg)](https://github.com/crystal-garage/crystal-zip64/actions/workflows/crystal.yml)\n[![GitHub release](https://img.shields.io/github/release/crystal-garage/crystal-zip64.svg)](https://github.com/crystal-garage/crystal-zip64/releases)\n[![Docs](https://img.shields.io/badge/docs-available-brightgreen.svg)](https://crystal-garage.github.io/crystal-zip64/)\n[![License](https://img.shields.io/github/license/crystal-garage/crystal-zip64.svg)](https://github.com/crystal-garage/crystal-zip64/blob/master/LICENSE)\n\nAn alternate ZIP reader and writer for Crystal.\n\n- Drop-in replacement for `Compress::Zip`\n- Allows you to compress files bigger than 4GB\n- Tested on Linux, macOS and Windows\n\nExtracted from <https://github.com/crystal-lang/crystal/pull/11396>.\nBased on <https://github.com/crystal-lang/crystal/pull/7236>.\n\nInspired by <https://github.com/WeTransfer/cr_zip_tricks>\n\n## Installation\n\n1. Add the dependency to your `shard.yml`:\n\n   ```yaml\n   dependencies:\n     zip64:\n       github: crystal-garage/crystal-zip64\n   ```\n\n2. Run `shards install`\n\n## Usage\n\n```crystal\nrequire \"zip64\"\n```\n\n### Reader\n\n```crystal\nZip64::Reader.open(\"./file.zip\") do |zip|\n  zip.each_entry do |entry|\n    p entry.filename\n    p entry.file?\n    p entry.dir?\n    p entry.io.gets_to_end\n  end\nend\n```\n\n### Writer\n\n```crystal\nFile.open(\"./file.zip\", \"w\") do |file|\n  Zip64::Writer.open(file) do |zip|\n    # Add a file with a String content\n    zip.add \"foo.txt\", \"contents of foo\"\n\n    # Add a file and write data to it through an IO\n    zip.add(\"bar.txt\") do |io|\n      io << \"contents of bar\"\n    end\n\n    # Add a file by referencing a file in the filesystem\n    # (the file is automatically closed after this call)\n    zip.add(\"baz.txt\", File.open(\"./some_file.txt\"))\n\n    # Add a directory\n    zip.add_dir(\"dir\")\n  end\nend\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/crystal-garage/crystal-zip64/fork>)\n2. Create your feature branch (`git checkout -b my-new-feature`)\n3. Commit your changes (`git commit -am 'Add some feature'`)\n4. Push to the branch (`git push origin my-new-feature`)\n5. Create a new Pull Request\n\n## Contributors\n\n- [Julik Tarkhanov](https://github.com/julik) - creator and maintainer\n- [Anton Maminov](https://github.com/mamantoha) - maintainer\n","program":{"html_id":"zip64/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"locations":[],"repository_name":"zip64","program":true,"enum":false,"alias":false,"const":false,"types":[{"html_id":"zip64/Zip64","path":"Zip64.html","kind":"module","full_name":"Zip64","name":"Zip64","abstract":false,"locations":[{"filename":"src/zip64.cr","line_number":3,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64.cr#L3"},{"filename":"src/zip64/checksum_reader.cr","line_number":1,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/checksum_reader.cr#L1"},{"filename":"src/zip64/checksum_writer.cr","line_number":1,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/checksum_writer.cr#L1"},{"filename":"src/zip64/crc32_writer.cr","line_number":1,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/crc32_writer.cr#L1"},{"filename":"src/zip64/output_counter.cr","line_number":1,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/output_counter.cr#L1"},{"filename":"src/zip64/zip.cr","line_number":29,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/zip.cr#L29"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"CENTRAL_DIRECTORY_HEADER_SIGNATURE","name":"CENTRAL_DIRECTORY_HEADER_SIGNATURE","value":"33639248"},{"id":"END_OF_CENTRAL_DIRECTORY_HEADER_SIGNATURE","name":"END_OF_CENTRAL_DIRECTORY_HEADER_SIGNATURE","value":"101010256"},{"id":"VERSION","name":"VERSION","value":"20_u16"}],"doc":"The `Zip64` module contains readers and writers of the zip\nfile format, described at [PKWARE's site](https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT).\n\n### Reading zip files\n\nTwo types are provided to read from zip files:\n* `Zip64::File`: can read zip entries from a `File` or from an `IO::Memory`\nand provides random read access to its entries.\n* `Zip64::Reader`: can only read zip entries sequentially from any `IO`.\n\n`Zip64::File` is the preferred method to read zip files if you\ncan provide a `File`, because it's a bit more flexible and provides\nmore complete information for zip entries (such as comments).\n\nWhen reading zip files, CRC32 checksum values are automatically\nverified when finishing reading an entry, and `Zip64::Error` will\nbe raised if the computed CRC32 checksum does not match.\n\n### Writer zip files\n\nUse `Zip64::Writer`, which writes zip entries sequentially to\nany `IO`.\n\nNOTE: only compression methods 0 (STORED) and 8 (DEFLATED) are\nsupported.","summary":"<p>The <code><a href=\"Zip64.html\">Zip64</a></code> module contains readers and writers of the zip file format, described at <a href=\"https://pkware.cachefly.net/webdocs/APPNOTE/APPNOTE-6.3.3.TXT\">PKWARE's site</a>.</p>","types":[{"html_id":"zip64/Zip64/CompressionMethod","path":"Zip64/CompressionMethod.html","kind":"enum","full_name":"Zip64::CompressionMethod","name":"CompressionMethod","abstract":false,"ancestors":[{"html_id":"zip64/Enum","kind":"struct","full_name":"Enum","name":"Enum"},{"html_id":"zip64/Comparable","kind":"module","full_name":"Comparable","name":"Comparable"},{"html_id":"zip64/Value","kind":"struct","full_name":"Value","name":"Value"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/compression_method.cr","line_number":2,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/compression_method.cr#L2"}],"repository_name":"zip64","program":false,"enum":true,"alias":false,"const":false,"constants":[{"id":"STORED","name":"STORED","value":"0_u16"},{"id":"DEFLATED","name":"DEFLATED","value":"8_u16"}],"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"doc":"Supported compression methods in the current implementation.","summary":"<p>Supported compression methods in the current implementation.</p>","instance_methods":[{"html_id":"deflated?-instance-method","name":"deflated?","doc":"Returns `true` if this enum value equals `DEFLATED`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Zip64/CompressionMethod.html#DEFLATED\">DEFLATED</a></code></p>","abstract":false,"location":{"filename":"src/zip64/compression_method.cr","line_number":4,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/compression_method.cr#L4"},"def":{"name":"deflated?","visibility":"Public","body":"self == DEFLATED"},"external_var":false},{"html_id":"stored?-instance-method","name":"stored?","doc":"Returns `true` if this enum value equals `STORED`","summary":"<p>Returns <code>true</code> if this enum value equals <code><a href=\"../Zip64/CompressionMethod.html#STORED\">STORED</a></code></p>","abstract":false,"location":{"filename":"src/zip64/compression_method.cr","line_number":3,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/compression_method.cr#L3"},"def":{"name":"stored?","visibility":"Public","body":"self == STORED"},"external_var":false}]},{"html_id":"zip64/Zip64/CRC32Writer","path":"Zip64/CRC32Writer.html","kind":"class","full_name":"Zip64::CRC32Writer","name":"CRC32Writer","abstract":false,"superclass":{"html_id":"zip64/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"zip64/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/crc32_writer.cr","line_number":4,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/crc32_writer.cr#L4"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"doc":"Computes the CRC32 checksum of bytes being written into it. Best used\nin combination with an IO::MultiWriter","summary":"<p>Computes the CRC32 checksum of bytes being written into it.</p>","constructors":[{"html_id":"new-class-method","name":"new","abstract":false,"location":{"filename":"src/zip64/crc32_writer.cr","line_number":5,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/crc32_writer.cr#L5"},"def":{"name":"new","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"read(slice:Bytes)-instance-method","name":"read","doc":"Reads at most *slice.size* bytes from this `IO` into *slice*.\nReturns the number of bytes read, which is 0 if and only if there is no\nmore data to read (so checking for 0 is the way to detect end of file).\n\n```\nio = IO::Memory.new \"hello\"\nslice = Bytes.new(4)\nio.read(slice) # => 4\nslice          # => Bytes[104, 101, 108, 108]\nio.read(slice) # => 1\nslice          # => Bytes[111, 101, 108, 108]\nio.read(slice) # => 0\n```","summary":"<p>Reads at most <em>slice.size</em> bytes from this <code>IO</code> into <em>slice</em>.</p>","abstract":false,"args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/zip64/crc32_writer.cr","line_number":9,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/crc32_writer.cr#L9"},"def":{"name":"read","args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"visibility":"Public","body":"raise(IO::Error.new(\"Can't read from Zip64::Writer entry\"))"},"external_var":false},{"html_id":"to_u32-instance-method","name":"to_u32","abstract":false,"location":{"filename":"src/zip64/crc32_writer.cr","line_number":19,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/crc32_writer.cr#L19"},"def":{"name":"to_u32","visibility":"Public","body":"@crc32.to_u32"},"external_var":false},{"html_id":"write(slice:Bytes):Nil-instance-method","name":"write","doc":"Writes the contents of *slice* into this `IO`.\n\n```\nio = IO::Memory.new\nslice = Bytes.new(4) { |i| ('a'.ord + i).to_u8 }\nio.write(slice)\nio.to_s # => \"abcd\"\n```","summary":"<p>Writes the contents of <em>slice</em> into this <code>IO</code>.</p>","abstract":false,"args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes) : Nil","args_html":"(slice : Bytes) : Nil","location":{"filename":"src/zip64/crc32_writer.cr","line_number":13,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/crc32_writer.cr#L13"},"def":{"name":"write","args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"return_type":"Nil","visibility":"Public","body":"if slice.empty?\n  return\nend\n@crc32 = ::Digest::CRC32.update(slice, @crc32)\nnil\n"},"external_var":false}]},{"html_id":"zip64/Zip64/Error","path":"Zip64/Error.html","kind":"class","full_name":"Zip64::Error","name":"Error","abstract":false,"superclass":{"html_id":"zip64/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"zip64/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/zip.cr","line_number":34,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/zip.cr#L34"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"}},{"html_id":"zip64/Zip64/File","path":"Zip64/File.html","kind":"class","full_name":"Zip64::File","name":"File","abstract":false,"superclass":{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/file.cr","line_number":27,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L27"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"doc":"Provides random read access to zip file entries stores inside\na `File` or an `IO::Memory`.\n\n### Example\n\n```\nrequire \"zip64\"\n\nZip64::File.open(\"./file.zip\") do |file|\n  # Iterate through all entries printing their filename and contents\n  file.entries.each do |entry|\n    p entry.filename\n    entry.open do |io|\n      p io.gets_to_end\n    end\n  end\n\n  # Random access to entries by filename is also provided\n  entry = file[\"some_file.txt\"]\n  entry.open do |io|\n    p io.gets_to_end\n  end\nend\n```","summary":"<p>Provides random read access to zip file entries stores inside a <code><a href=\"../Zip64/File.html\">File</a></code> or an <code>IO::Memory</code>.</p>","class_methods":[{"html_id":"open(io:IO,sync_close=false,&)-class-method","name":"open","doc":"Opens a `Zip64::File` for reading from the given *io*, yields\nit to the given block, and closes it at the end.","summary":"<p>Opens a <code><a href=\"../Zip64/File.html\">Zip64::File</a></code> for reading from the given <em>io</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, sync_close = false, &)","args_html":"(io : IO, sync_close = <span class=\"n\">false</span>, &)","location":{"filename":"src/zip64/file.cr","line_number":53,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L53"},"def":{"name":"open","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"zip = new(io, sync_close)\nbegin\n  yield zip\nensure\n  zip.close\nend\n"},"external_var":false},{"html_id":"open(filename:Path|String,&)-class-method","name":"open","doc":"Opens a `Zip64::File` for reading from the given *filename*, yields\nit to the given block, and closes it at the end.","summary":"<p>Opens a <code><a href=\"../Zip64/File.html\">Zip64::File</a></code> for reading from the given <em>filename</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String, &)","args_html":"(filename : Path | String, &)","location":{"filename":"src/zip64/file.cr","line_number":60,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L60"},"def":{"name":"open","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"yields":1,"block_arity":1,"visibility":"Public","body":"zip = new(filename)\nbegin\n  yield zip\nensure\n  zip.close\nend\n"},"external_var":false}],"constructors":[{"html_id":"new(io:IO,sync_close:Bool=false)-class-method","name":"new","doc":"Opens a `Zip64::File` for reading from the given *io*.","summary":"<p>Opens a <code><a href=\"../Zip64/File.html\">Zip64::File</a></code> for reading from the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":"::Bool"}],"args_string":"(io : IO, sync_close : Bool = false)","args_html":"(io : IO, sync_close : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/zip64/file.cr","line_number":38,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L38"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io, sync_close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(filename:Path|String)-class-method","name":"new","doc":"Opens a `Zip64::File` for reading from the given *filename*.","summary":"<p>Opens a <code><a href=\"../Zip64/File.html\">Zip64::File</a></code> for reading from the given <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String)","args_html":"(filename : Path | String)","location":{"filename":"src/zip64/file.cr","line_number":47,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L47"},"def":{"name":"new","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"visibility":"Public","body":"new(::File.new(filename), sync_close: true)"},"external_var":false}],"instance_methods":[{"html_id":"[](filename:Path|String):Entry-instance-method","name":"[]","doc":"Returns the entry that has the given filename, or\nraises `KeyError` if no such entry exists.","summary":"<p>Returns the entry that has the given filename, or raises <code>KeyError</code> if no such entry exists.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String) : Entry","args_html":"(filename : Path | String) : <a href=\"../Zip64/File/Entry.html\">Entry</a>","location":{"filename":"src/zip64/file.cr","line_number":67,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L67"},"def":{"name":"[]","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"return_type":"Entry","visibility":"Public","body":"self[filename]? || (raise(KeyError.new(\"Missing zip entry: #{filename}\")))"},"external_var":false},{"html_id":"[]?(filename:Path|String):Entry|Nil-instance-method","name":"[]?","doc":"Returns the entry that has the given filename, or\n`nil` if no such entry exists.","summary":"<p>Returns the entry that has the given filename, or <code>nil</code> if no such entry exists.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String) : Entry | Nil","args_html":"(filename : Path | String) : <a href=\"../Zip64/File/Entry.html\">Entry</a> | Nil","location":{"filename":"src/zip64/file.cr","line_number":73,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L73"},"def":{"name":"[]?","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"return_type":"Entry | ::Nil","visibility":"Public","body":"@entries_by_filename[filename.to_s]?"},"external_var":false},{"html_id":"close:Nil-instance-method","name":"close","doc":"Closes this zip file.","summary":"<p>Closes this zip file.</p>","abstract":false,"location":{"filename":"src/zip64/file.cr","line_number":78,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L78"},"def":{"name":"close","return_type":"Nil","visibility":"Public","body":"if @closed\n  return\nend\n@closed = true\nif @sync_close\n  @io.close\nend\n"},"external_var":false},{"html_id":"closed?:Bool-instance-method","name":"closed?","doc":"Returns `true` if this zip file is closed.","summary":"<p>Returns <code>true</code> if this zip file is closed.</p>","abstract":false,"location":{"filename":"src/zip64/file.cr","line_number":32,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L32"},"def":{"name":"closed?","visibility":"Public","body":"@closed"},"external_var":false},{"html_id":"comment:String-instance-method","name":"comment","doc":"Returns the zip file comment.","summary":"<p>Returns the zip file comment.</p>","abstract":false,"location":{"filename":"src/zip64/file.cr","line_number":35,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L35"},"def":{"name":"comment","visibility":"Public","body":"@comment"},"external_var":false},{"html_id":"entries:Array(Entry)-instance-method","name":"entries","doc":"Returns all entries inside this zip file.","summary":"<p>Returns all entries inside this zip file.</p>","abstract":false,"location":{"filename":"src/zip64/file.cr","line_number":29,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L29"},"def":{"name":"entries","return_type":"Array(Entry)","visibility":"Public","body":"@entries"},"external_var":false}],"types":[{"html_id":"zip64/Zip64/File/Entry","path":"Zip64/File/Entry.html","kind":"class","full_name":"Zip64::File::Entry","name":"Entry","abstract":false,"superclass":{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"zip64/Zip64/FileInfo","kind":"module","full_name":"Zip64::FileInfo","name":"FileInfo"},{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/file.cr","line_number":159,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L159"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"zip64/Zip64/FileInfo","kind":"module","full_name":"Zip64::FileInfo","name":"FileInfo"}],"namespace":{"html_id":"zip64/Zip64/File","kind":"class","full_name":"Zip64::File","name":"File"},"doc":"An entry inside a `Zip64::File`.\n\nUse the `open` method to read from it.","summary":"<p>An entry inside a <code><a href=\"../../Zip64/File.html\">Zip64::File</a></code>.</p>","instance_methods":[{"html_id":"open(&)-instance-method","name":"open","doc":"Yields an `IO` to read this entry's contents.\nMultiple entries can be opened and read concurrently.","summary":"<p>Yields an <code>IO</code> to read this entry's contents.</p>","abstract":false,"location":{"filename":"src/zip64/file.cr","line_number":169,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file.cr#L169"},"def":{"name":"open","yields":1,"block_arity":1,"visibility":"Public","body":"@io.read_at(data_offset.to_i32, compressed_size.to_i32) do |io|\n  io = decompressor_for(io, is_sized: true)\n  checksum_reader = ChecksumReader.new(io, filename, verify: crc32)\n  yield checksum_reader\nend"},"external_var":false}]}]},{"html_id":"zip64/Zip64/FileInfo","path":"Zip64/FileInfo.html","kind":"module","full_name":"Zip64::FileInfo","name":"FileInfo","abstract":false,"locations":[{"filename":"src/zip64/file_info.cr","line_number":2,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L2"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"DATA_DESCRIPTOR_SIGNATURE","name":"DATA_DESCRIPTOR_SIGNATURE","value":"134695760"},{"id":"DEFLATE_END_SIGNATURE","name":"DEFLATE_END_SIGNATURE","value":"Bytes[80, 75, 7, 8, read_only: true]"},{"id":"SIGNATURE","name":"SIGNATURE","value":"67324752"}],"including_types":[{"html_id":"zip64/Zip64/File/Entry","kind":"class","full_name":"Zip64::File::Entry","name":"Entry"},{"html_id":"zip64/Zip64/Reader/Entry","kind":"class","full_name":"Zip64::Reader::Entry","name":"Entry"},{"html_id":"zip64/Zip64/Writer/Entry","kind":"class","full_name":"Zip64::Writer::Entry","name":"Entry"}],"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"doc":"Base type for file information related to zip entries.","summary":"<p>Base type for file information related to zip entries.</p>","constructors":[{"html_id":"new(filename:String,time=Time.utc,comment=\"\",extra=Bytes.empty)-class-method","name":"new","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"String"},{"name":"time","default_value":"Time.utc","external_name":"time","restriction":""},{"name":"comment","default_value":"\"\"","external_name":"comment","restriction":""},{"name":"extra","default_value":"Bytes.empty","external_name":"extra","restriction":""}],"args_string":"(filename : String, time = Time.utc, comment = \"\", extra = Bytes.empty)","args_html":"(filename : String, time = <span class=\"t\">Time</span>.utc, comment = <span class=\"s\">&quot;&quot;</span>, extra = <span class=\"t\">Bytes</span>.empty)","location":{"filename":"src/zip64/file_info.cr","line_number":68,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L68"},"def":{"name":"new","args":[{"name":"filename","external_name":"filename","restriction":"String"},{"name":"time","default_value":"Time.utc","external_name":"time","restriction":""},{"name":"comment","default_value":"\"\"","external_name":"comment","restriction":""},{"name":"extra","default_value":"Bytes.empty","external_name":"extra","restriction":""}],"visibility":"Public","body":"_ = allocate\n_.initialize(filename, time, comment, extra)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false}],"instance_methods":[{"html_id":"comment-instance-method","name":"comment","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":17,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L17"},"def":{"name":"comment","visibility":"Public","body":"@comment"},"external_var":false},{"html_id":"comment=(comment)-instance-method","name":"comment=","abstract":false,"args":[{"name":"comment","external_name":"comment","restriction":""}],"args_string":"(comment)","args_html":"(comment)","location":{"filename":"src/zip64/file_info.cr","line_number":17,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L17"},"def":{"name":"comment=","args":[{"name":"comment","external_name":"comment","restriction":""}],"visibility":"Public","body":"@comment = comment"},"external_var":false},{"html_id":"compressed_size-instance-method","name":"compressed_size","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":13,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L13"},"def":{"name":"compressed_size","visibility":"Public","body":"@compressed_size"},"external_var":false},{"html_id":"compressed_size=(compressed_size)-instance-method","name":"compressed_size=","abstract":false,"args":[{"name":"compressed_size","external_name":"compressed_size","restriction":""}],"args_string":"(compressed_size)","args_html":"(compressed_size)","location":{"filename":"src/zip64/file_info.cr","line_number":13,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L13"},"def":{"name":"compressed_size=","args":[{"name":"compressed_size","external_name":"compressed_size","restriction":""}],"visibility":"Public","body":"@compressed_size = compressed_size"},"external_var":false},{"html_id":"compression_method-instance-method","name":"compression_method","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":10,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L10"},"def":{"name":"compression_method","visibility":"Public","body":"@compression_method"},"external_var":false},{"html_id":"compression_method=(compression_method)-instance-method","name":"compression_method=","abstract":false,"args":[{"name":"compression_method","external_name":"compression_method","restriction":""}],"args_string":"(compression_method)","args_html":"(compression_method)","location":{"filename":"src/zip64/file_info.cr","line_number":10,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L10"},"def":{"name":"compression_method=","args":[{"name":"compression_method","external_name":"compression_method","restriction":""}],"visibility":"Public","body":"@compression_method = compression_method"},"external_var":false},{"html_id":"crc32-instance-method","name":"crc32","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":12,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L12"},"def":{"name":"crc32","visibility":"Public","body":"@crc32"},"external_var":false},{"html_id":"crc32=(crc32)-instance-method","name":"crc32=","abstract":false,"args":[{"name":"crc32","external_name":"crc32","restriction":""}],"args_string":"(crc32)","args_html":"(crc32)","location":{"filename":"src/zip64/file_info.cr","line_number":12,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L12"},"def":{"name":"crc32=","args":[{"name":"crc32","external_name":"crc32","restriction":""}],"visibility":"Public","body":"@crc32 = crc32"},"external_var":false},{"html_id":"dir?:Bool-instance-method","name":"dir?","doc":"Returns `true` if this entry is a directory.","summary":"<p>Returns <code>true</code> if this entry is a directory.</p>","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":72,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L72"},"def":{"name":"dir?","return_type":"Bool","visibility":"Public","body":"filename.ends_with?('/')"},"external_var":false},{"html_id":"extra-instance-method","name":"extra","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":16,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L16"},"def":{"name":"extra","visibility":"Public","body":"@extra"},"external_var":false},{"html_id":"extra=(extra)-instance-method","name":"extra=","abstract":false,"args":[{"name":"extra","external_name":"extra","restriction":""}],"args_string":"(extra)","args_html":"(extra)","location":{"filename":"src/zip64/file_info.cr","line_number":16,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L16"},"def":{"name":"extra=","args":[{"name":"extra","external_name":"extra","restriction":""}],"visibility":"Public","body":"@extra = extra"},"external_var":false},{"html_id":"file?:Bool-instance-method","name":"file?","doc":"Returns `true` if this entry is a file.","summary":"<p>Returns <code>true</code> if this entry is a file.</p>","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":77,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L77"},"def":{"name":"file?","return_type":"Bool","visibility":"Public","body":"!dir?"},"external_var":false},{"html_id":"filename-instance-method","name":"filename","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":15,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L15"},"def":{"name":"filename","visibility":"Public","body":"@filename"},"external_var":false},{"html_id":"filename=(filename)-instance-method","name":"filename=","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":""}],"args_string":"(filename)","args_html":"(filename)","location":{"filename":"src/zip64/file_info.cr","line_number":15,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L15"},"def":{"name":"filename=","args":[{"name":"filename","external_name":"filename","restriction":""}],"visibility":"Public","body":"@filename = filename"},"external_var":false},{"html_id":"general_purpose_bit_flag-instance-method","name":"general_purpose_bit_flag","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":9,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L9"},"def":{"name":"general_purpose_bit_flag","visibility":"Public","body":"@general_purpose_bit_flag"},"external_var":false},{"html_id":"general_purpose_bit_flag=(general_purpose_bit_flag)-instance-method","name":"general_purpose_bit_flag=","abstract":false,"args":[{"name":"general_purpose_bit_flag","external_name":"general_purpose_bit_flag","restriction":""}],"args_string":"(general_purpose_bit_flag)","args_html":"(general_purpose_bit_flag)","location":{"filename":"src/zip64/file_info.cr","line_number":9,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L9"},"def":{"name":"general_purpose_bit_flag=","args":[{"name":"general_purpose_bit_flag","external_name":"general_purpose_bit_flag","restriction":""}],"visibility":"Public","body":"@general_purpose_bit_flag = general_purpose_bit_flag"},"external_var":false},{"html_id":"offset-instance-method","name":"offset","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":18,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L18"},"def":{"name":"offset","visibility":"Public","body":"@offset"},"external_var":false},{"html_id":"offset=(offset)-instance-method","name":"offset=","abstract":false,"args":[{"name":"offset","external_name":"offset","restriction":""}],"args_string":"(offset)","args_html":"(offset)","location":{"filename":"src/zip64/file_info.cr","line_number":18,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L18"},"def":{"name":"offset=","args":[{"name":"offset","external_name":"offset","restriction":""}],"visibility":"Public","body":"@offset = offset"},"external_var":false},{"html_id":"time:Time-instance-method","name":"time","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":11,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L11"},"def":{"name":"time","return_type":"Time","visibility":"Public","body":"@time"},"external_var":false},{"html_id":"time=(time:Time)-instance-method","name":"time=","abstract":false,"args":[{"name":"time","external_name":"time","restriction":"Time"}],"args_string":"(time : Time)","args_html":"(time : Time)","location":{"filename":"src/zip64/file_info.cr","line_number":11,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L11"},"def":{"name":"time=","args":[{"name":"time","external_name":"time","restriction":"Time"}],"visibility":"Public","body":"@time = time"},"external_var":false},{"html_id":"uncompressed_size-instance-method","name":"uncompressed_size","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":14,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L14"},"def":{"name":"uncompressed_size","visibility":"Public","body":"@uncompressed_size"},"external_var":false},{"html_id":"uncompressed_size=(uncompressed_size)-instance-method","name":"uncompressed_size=","abstract":false,"args":[{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":""}],"args_string":"(uncompressed_size)","args_html":"(uncompressed_size)","location":{"filename":"src/zip64/file_info.cr","line_number":14,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L14"},"def":{"name":"uncompressed_size=","args":[{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":""}],"visibility":"Public","body":"@uncompressed_size = uncompressed_size"},"external_var":false},{"html_id":"version:UInt16-instance-method","name":"version","abstract":false,"location":{"filename":"src/zip64/file_info.cr","line_number":8,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L8"},"def":{"name":"version","return_type":"UInt16","visibility":"Public","body":"@version"},"external_var":false},{"html_id":"version=(version:UInt16)-instance-method","name":"version=","abstract":false,"args":[{"name":"version","external_name":"version","restriction":"UInt16"}],"args_string":"(version : UInt16)","args_html":"(version : UInt16)","location":{"filename":"src/zip64/file_info.cr","line_number":8,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/file_info.cr#L8"},"def":{"name":"version=","args":[{"name":"version","external_name":"version","restriction":"UInt16"}],"visibility":"Public","body":"@version = version"},"external_var":false}]},{"html_id":"zip64/Zip64/OutputCounter","path":"Zip64/OutputCounter.html","kind":"class","full_name":"Zip64::OutputCounter","name":"OutputCounter","abstract":false,"superclass":{"html_id":"zip64/IO","kind":"class","full_name":"IO","name":"IO"},"ancestors":[{"html_id":"zip64/IO","kind":"class","full_name":"IO","name":"IO"},{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/output_counter.cr","line_number":3,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/output_counter.cr#L3"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"doc":"Counts written bytes. Intended to be used with IO::MultiWriter as one of the outputs","summary":"<p>Counts written bytes.</p>","instance_methods":[{"html_id":"bytes_written:UInt64-instance-method","name":"bytes_written","abstract":false,"location":{"filename":"src/zip64/output_counter.cr","line_number":4,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/output_counter.cr#L4"},"def":{"name":"bytes_written","visibility":"Public","body":"@bytes_written"},"external_var":false},{"html_id":"read(slice:Bytes)-instance-method","name":"read","doc":"Reads at most *slice.size* bytes from this `IO` into *slice*.\nReturns the number of bytes read, which is 0 if and only if there is no\nmore data to read (so checking for 0 is the way to detect end of file).\n\n```\nio = IO::Memory.new \"hello\"\nslice = Bytes.new(4)\nio.read(slice) # => 4\nslice          # => Bytes[104, 101, 108, 108]\nio.read(slice) # => 1\nslice          # => Bytes[111, 101, 108, 108]\nio.read(slice) # => 0\n```","summary":"<p>Reads at most <em>slice.size</em> bytes from this <code>IO</code> into <em>slice</em>.</p>","abstract":false,"args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes)","args_html":"(slice : Bytes)","location":{"filename":"src/zip64/output_counter.cr","line_number":6,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/output_counter.cr#L6"},"def":{"name":"read","args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"visibility":"Public","body":"raise(IO::Error.new(\"Can't read from Zip64::OutputCounter entry\"))"},"external_var":false},{"html_id":"simulate_write(by:Int)-instance-method","name":"simulate_write","abstract":false,"args":[{"name":"by","external_name":"by","restriction":"Int"}],"args_string":"(by : Int)","args_html":"(by : Int)","location":{"filename":"src/zip64/output_counter.cr","line_number":16,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/output_counter.cr#L16"},"def":{"name":"simulate_write","args":[{"name":"by","external_name":"by","restriction":"Int"}],"visibility":"Public","body":"@bytes_written = @bytes_written + by"},"external_var":false},{"html_id":"to_u64:UInt64-instance-method","name":"to_u64","abstract":false,"location":{"filename":"src/zip64/output_counter.cr","line_number":20,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/output_counter.cr#L20"},"def":{"name":"to_u64","visibility":"Public","body":"@bytes_written"},"external_var":false},{"html_id":"write(slice:Bytes):Nil-instance-method","name":"write","doc":"Writes the contents of *slice* into this `IO`.\n\n```\nio = IO::Memory.new\nslice = Bytes.new(4) { |i| ('a'.ord + i).to_u8 }\nio.write(slice)\nio.to_s # => \"abcd\"\n```","summary":"<p>Writes the contents of <em>slice</em> into this <code>IO</code>.</p>","abstract":false,"args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"args_string":"(slice : Bytes) : Nil","args_html":"(slice : Bytes) : Nil","location":{"filename":"src/zip64/output_counter.cr","line_number":10,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/output_counter.cr#L10"},"def":{"name":"write","args":[{"name":"slice","external_name":"slice","restriction":"Bytes"}],"return_type":"Nil","visibility":"Public","body":"if slice.empty?\n  return\nend\n@bytes_written = @bytes_written + slice.size\nnil\n"},"external_var":false}]},{"html_id":"zip64/Zip64/Reader","path":"Zip64/Reader.html","kind":"class","full_name":"Zip64::Reader","name":"Reader","abstract":false,"superclass":{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/reader.cr","line_number":25,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L25"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"doc":"Reads zip file entries sequentially from an `IO`.\n\nNOTE: Entries might not have correct values\nfor crc32, compressed_size, uncompressed_size and comment,\nbecause when reading a zip file directly from a stream this\ninformation might be stored later in the zip stream.\nIf you need this information, consider using `Zip64::File`.\n\n### Example\n\n```\nrequire \"zip64\"\n\nZip64::Reader.open(\"./file.zip\") do |zip|\n  zip.each_entry do |entry|\n    p entry.filename\n    p entry.file?\n    p entry.dir?\n    p entry.io.gets_to_end\n  end\nend\n```","summary":"<p>Reads zip file entries sequentially from an <code>IO</code>.</p>","class_methods":[{"html_id":"open(io:IO,sync_close=false,&)-class-method","name":"open","doc":"Creates a new reader from the given *io*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new reader from the given <em>io</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, sync_close = false, &)","args_html":"(io : IO, sync_close = <span class=\"n\">false</span>, &)","location":{"filename":"src/zip64/reader.cr","line_number":45,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L45"},"def":{"name":"open","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"reader = new(io, sync_close: sync_close)\nbegin\n  yield reader\nensure\n  reader.close\nend\n"},"external_var":false},{"html_id":"open(filename:Path|String,&)-class-method","name":"open","doc":"Creates a new reader from the given *filename*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new reader from the given <em>filename</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String, &)","args_html":"(filename : Path | String, &)","location":{"filename":"src/zip64/reader.cr","line_number":52,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L52"},"def":{"name":"open","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"yields":1,"block_arity":1,"visibility":"Public","body":"reader = new(filename)\nbegin\n  yield reader\nensure\n  reader.close\nend\n"},"external_var":false}],"constructors":[{"html_id":"new(io:IO,sync_close:Bool=false)-class-method","name":"new","doc":"Creates a new reader from the given *io*.","summary":"<p>Creates a new reader from the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":"::Bool"}],"args_string":"(io : IO, sync_close : Bool = false)","args_html":"(io : IO, sync_close : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/zip64/reader.cr","line_number":33,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L33"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io, sync_close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(filename:Path|String)-class-method","name":"new","doc":"Creates a new reader from the given *filename*.","summary":"<p>Creates a new reader from the given <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String)","args_html":"(filename : Path | String)","location":{"filename":"src/zip64/reader.cr","line_number":39,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L39"},"def":{"name":"new","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"visibility":"Public","body":"new(::File.new(filename), sync_close: true)"},"external_var":false}],"instance_methods":[{"html_id":"close:Nil-instance-method","name":"close","doc":"Closes this zip reader.","summary":"<p>Closes this zip reader.</p>","abstract":false,"location":{"filename":"src/zip64/reader.cr","line_number":104,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L104"},"def":{"name":"close","return_type":"Nil","visibility":"Public","body":"if @closed\n  return\nend\n@closed = true\nif @sync_close\n  @io.close\nend\n"},"external_var":false},{"html_id":"closed?:Bool-instance-method","name":"closed?","doc":"Returns `true` if this reader is closed.","summary":"<p>Returns <code>true</code> if this reader is closed.</p>","abstract":false,"location":{"filename":"src/zip64/reader.cr","line_number":30,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L30"},"def":{"name":"closed?","visibility":"Public","body":"@closed"},"external_var":false},{"html_id":"each_entry(&)-instance-method","name":"each_entry","doc":"Yields each entry in the zip to the given block.","summary":"<p>Yields each entry in the zip to the given block.</p>","abstract":false,"location":{"filename":"src/zip64/reader.cr","line_number":97,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L97"},"def":{"name":"each_entry","yields":1,"block_arity":1,"visibility":"Public","body":"while entry = next_entry\n  yield entry\nend"},"external_var":false},{"html_id":"next_entry:Entry|Nil-instance-method","name":"next_entry","doc":"Reads the next entry in the zip, or `nil` if there\nare no more entries.\n\nAfter reading a next entry, previous entries can no\nlonger be read (their `IO` will be closed.)","summary":"<p>Reads the next entry in the zip, or <code>nil</code> if there are no more entries.</p>","abstract":false,"location":{"filename":"src/zip64/reader.cr","line_number":62,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L62"},"def":{"name":"next_entry","return_type":"Entry | ::Nil","visibility":"Public","body":"if @reached_end\n  return nil\nend\n\nif last_entry = @last_entry\n  last_entry.close\n  skip_data_descriptor(last_entry)\nend\n\nloop do\n  signature = read(UInt32)\n\n  case signature\n  when FileInfo::SIGNATURE\n    break\n  when FileInfo::DATA_DESCRIPTOR_SIGNATURE\n    if last_entry && (!@read_data_descriptor)\n      read_data_descriptor(last_entry)\n      next\n    else\n      raise(Error.new(\"Unexpected data descriptor when reading zip\"))\n    end\n  else\n    @reached_end = true\n    return nil\n  end\nend\n\n@last_entry = Entry.new(@io)\n"},"external_var":false},{"html_id":"sync_close=(sync_close:Bool)-instance-method","name":"sync_close=","doc":"Whether to close the enclosed `IO` when closing this reader.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this reader.</p>","abstract":false,"args":[{"name":"sync_close","external_name":"sync_close","restriction":"::Bool"}],"args_string":"(sync_close : Bool)","args_html":"(sync_close : Bool)","location":{"filename":"src/zip64/reader.cr","line_number":27,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L27"},"def":{"name":"sync_close=","args":[{"name":"sync_close","external_name":"sync_close","restriction":"::Bool"}],"visibility":"Public","body":"@sync_close = sync_close"},"external_var":false},{"html_id":"sync_close?:Bool-instance-method","name":"sync_close?","doc":"Whether to close the enclosed `IO` when closing this reader.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this reader.</p>","abstract":false,"location":{"filename":"src/zip64/reader.cr","line_number":27,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L27"},"def":{"name":"sync_close?","visibility":"Public","body":"@sync_close"},"external_var":false}],"types":[{"html_id":"zip64/Zip64/Reader/Entry","path":"Zip64/Reader/Entry.html","kind":"class","full_name":"Zip64::Reader::Entry","name":"Entry","abstract":false,"superclass":{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"zip64/Zip64/FileInfo","kind":"module","full_name":"Zip64::FileInfo","name":"FileInfo"},{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/reader.cr","line_number":148,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L148"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"zip64/Zip64/FileInfo","kind":"module","full_name":"Zip64::FileInfo","name":"FileInfo"}],"namespace":{"html_id":"zip64/Zip64/Reader","kind":"class","full_name":"Zip64::Reader","name":"Reader"},"doc":"A entry inside a `Zip64::Reader`.\n\nUse the `io` method to read from it.","summary":"<p>A entry inside a <code><a href=\"../../Zip64/Reader.html\">Zip64::Reader</a></code>.</p>","instance_methods":[{"html_id":"io:IO-instance-method","name":"io","doc":"Returns an `IO` to the entry's data.","summary":"<p>Returns an <code>IO</code> to the entry's data.</p>","abstract":false,"location":{"filename":"src/zip64/reader.cr","line_number":159,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/reader.cr#L159"},"def":{"name":"io","return_type":"IO","visibility":"Public","body":"@io"},"external_var":false}]}]},{"html_id":"zip64/Zip64/Serializer","path":"Zip64/Serializer.html","kind":"class","full_name":"Zip64::Serializer","name":"Serializer","abstract":false,"superclass":{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/serializer.cr","line_number":1,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L1"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"constants":[{"id":"MADE_BY_SIGNATURE","name":"MADE_BY_SIGNATURE","value":"Bytes[52, 3]","doc":"A combination of two bytes - version_made_by as low byte and the OS type as high byte\nversion_made_by = 52\nos_type = 3 # UNIX\n[version_made_by, os_type].pack('CC')","summary":"<p>A combination of two bytes - version_made_by as low byte and the OS type as high byte version_made_by = 52 os_type = 3 # UNIX [version_made_by, os_type].pack('CC')</p>"},{"id":"VERSION_NEEDED_TO_EXTRACT","name":"VERSION_NEEDED_TO_EXTRACT","value":"20"},{"id":"VERSION_NEEDED_TO_EXTRACT_ZIP64","name":"VERSION_NEEDED_TO_EXTRACT_ZIP64","value":"45"}],"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"instance_methods":[{"html_id":"dir_external_attrs-instance-method","name":"dir_external_attrs","abstract":false,"location":{"filename":"src/zip64/serializer.cr","line_number":31,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L31"},"def":{"name":"dir_external_attrs","visibility":"Public","body":"unix_perms = 493\nfile_type_dir = 4\n(((file_type_dir << 12) | (unix_perms & 4095)) << 16).to_u32!\n"},"external_var":false},{"html_id":"file_external_attrs-instance-method","name":"file_external_attrs","abstract":false,"location":{"filename":"src/zip64/serializer.cr","line_number":20,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L20"},"def":{"name":"file_external_attrs","visibility":"Public","body":"unix_perms = 420\nfile_type_file = 8\n(((file_type_file << 12) | (unix_perms & 4095)) << 16).to_u32!\n"},"external_var":false},{"html_id":"write_central_directory_file_header(io:IO,filename:String,compressed_size:ZipFilesize,uncompressed_size:ZipFilesize,crc32:ZipCRC32,gp_flags:ZipGpFlags,mtime:Time,storage_mode:ZipStorageMode,local_file_header_location:ZipLocation,additional_extra_fields:Bytes=Bytes.empty,comment:String=\"\")-instance-method","name":"write_central_directory_file_header","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"filename","external_name":"filename","restriction":"String"},{"name":"compressed_size","external_name":"compressed_size","restriction":"ZipFilesize"},{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":"ZipFilesize"},{"name":"crc32","external_name":"crc32","restriction":"ZipCRC32"},{"name":"gp_flags","external_name":"gp_flags","restriction":"ZipGpFlags"},{"name":"mtime","external_name":"mtime","restriction":"Time"},{"name":"storage_mode","external_name":"storage_mode","restriction":"ZipStorageMode"},{"name":"local_file_header_location","external_name":"local_file_header_location","restriction":"ZipLocation"},{"name":"additional_extra_fields","default_value":"Bytes.empty","external_name":"additional_extra_fields","restriction":"Bytes"},{"name":"comment","default_value":"\"\"","external_name":"comment","restriction":"String"}],"args_string":"(io : IO, filename : String, compressed_size : ZipFilesize, uncompressed_size : ZipFilesize, crc32 : ZipCRC32, gp_flags : ZipGpFlags, mtime : Time, storage_mode : ZipStorageMode, local_file_header_location : ZipLocation, additional_extra_fields : Bytes = Bytes.empty, comment : String = \"\")","args_html":"(io : IO, filename : String, compressed_size : <a href=\"../Zip64/Serializer/ZipFilesize.html\">ZipFilesize</a>, uncompressed_size : <a href=\"../Zip64/Serializer/ZipFilesize.html\">ZipFilesize</a>, crc32 : <a href=\"../Zip64/Serializer/ZipCRC32.html\">ZipCRC32</a>, gp_flags : <a href=\"../Zip64/Serializer/ZipGpFlags.html\">ZipGpFlags</a>, mtime : Time, storage_mode : <a href=\"../Zip64/Serializer/ZipStorageMode.html\">ZipStorageMode</a>, local_file_header_location : <a href=\"../Zip64/Serializer/ZipLocation.html\">ZipLocation</a>, additional_extra_fields : Bytes = <span class=\"t\">Bytes</span>.empty, comment : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/zip64/serializer.cr","line_number":93,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L93"},"def":{"name":"write_central_directory_file_header","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"filename","external_name":"filename","restriction":"String"},{"name":"compressed_size","external_name":"compressed_size","restriction":"ZipFilesize"},{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":"ZipFilesize"},{"name":"crc32","external_name":"crc32","restriction":"ZipCRC32"},{"name":"gp_flags","external_name":"gp_flags","restriction":"ZipGpFlags"},{"name":"mtime","external_name":"mtime","restriction":"Time"},{"name":"storage_mode","external_name":"storage_mode","restriction":"ZipStorageMode"},{"name":"local_file_header_location","external_name":"local_file_header_location","restriction":"ZipLocation"},{"name":"additional_extra_fields","default_value":"Bytes.empty","external_name":"additional_extra_fields","restriction":"Bytes"},{"name":"comment","default_value":"\"\"","external_name":"comment","restriction":"String"}],"visibility":"Public","body":"add_zip64 = ((local_file_header_location > UInt32::MAX) || (compressed_size > UInt32::MAX)) || (uncompressed_size > UInt32::MAX)\n\n\nextra_fields_io = IO::Memory.new\nif add_zip64\n  write_zip64_extra_for_central_directory_file_header(extra_fields_io, uncompressed_size, compressed_size, local_file_header_location)\nend\nwrite_timestamp_extra_field(extra_fields_io, mtime)\nextra_fields_io.write(additional_extra_fields)\nextra_fields_io.rewind\n\nwrite_uint32_le(io, 33639248)\nio.write(MADE_BY_SIGNATURE)\nwrite_uint16_le(io, add_zip64 ? VERSION_NEEDED_TO_EXTRACT_ZIP64 : VERSION_NEEDED_TO_EXTRACT)\n\nwrite_uint16_le(io, gp_flags)\nwrite_uint16_le(io, storage_mode.to_u16)\nwrite_uint16_le(io, to_binary_dos_time(mtime))\nwrite_uint16_le(io, to_binary_dos_date(mtime))\nwrite_uint32_le(io, crc32)\n\nwrite_uint32_le(io, add_zip64 ? UInt32::MAX : compressed_size)\nwrite_uint32_le(io, add_zip64 ? UInt32::MAX : uncompressed_size)\n\n\nwrite_uint16_le(io, filename.bytesize)\nwrite_uint16_le(io, extra_fields_io.size)\nwrite_uint16_le(io, comment.bytesize.to_u16)\n\n\n\n\nwrite_uint16_le(io, add_zip64 ? UInt16::MAX : 0)\nwrite_uint16_le(io, 0)\n\n\n\n\nexattrs = filename.ends_with?('/') ? dir_external_attrs : file_external_attrs\nwrite_uint32_le(io, exattrs)\n\nentry_header_offset = add_zip64 ? UInt32::MAX : local_file_header_location\nwrite_uint32_le(io, entry_header_offset)\n\nio.write(filename.to_slice)\n\nIO.copy(extra_fields_io, io)\n\nio.write(comment.to_slice)\n"},"external_var":false},{"html_id":"write_data_descriptor(io:IO,compressed_size:ZipFilesize,uncompressed_size:ZipFilesize,crc32:ZipCRC32)-instance-method","name":"write_data_descriptor","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"compressed_size","external_name":"compressed_size","restriction":"ZipFilesize"},{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":"ZipFilesize"},{"name":"crc32","external_name":"crc32","restriction":"ZipCRC32"}],"args_string":"(io : IO, compressed_size : ZipFilesize, uncompressed_size : ZipFilesize, crc32 : ZipCRC32)","args_html":"(io : IO, compressed_size : <a href=\"../Zip64/Serializer/ZipFilesize.html\">ZipFilesize</a>, uncompressed_size : <a href=\"../Zip64/Serializer/ZipFilesize.html\">ZipFilesize</a>, crc32 : <a href=\"../Zip64/Serializer/ZipCRC32.html\">ZipCRC32</a>)","location":{"filename":"src/zip64/serializer.cr","line_number":199,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L199"},"def":{"name":"write_data_descriptor","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"compressed_size","external_name":"compressed_size","restriction":"ZipFilesize"},{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":"ZipFilesize"},{"name":"crc32","external_name":"crc32","restriction":"ZipCRC32"}],"visibility":"Public","body":"write_uint32_le(io, 134695760)\n\n\nwrite_uint32_le(io, crc32)\n\n\n\n\nrequires_zip64 = (compressed_size > UInt32::MAX || uncompressed_size > UInt32::MAX)\n\n\n\nif requires_zip64\n  write_uint64_le(io, compressed_size)\n  write_uint64_le(io, uncompressed_size)\nelse\n  write_uint32_le(io, compressed_size)\n  write_uint32_le(io, uncompressed_size)\nend\n"},"external_var":false},{"html_id":"write_end_of_central_directory(io:IO,start_of_central_directory_location:ZipLocation,central_directory_size:ZipLocation,num_files_in_archive:ZipLocation,comment:String=\"\")-instance-method","name":"write_end_of_central_directory","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"start_of_central_directory_location","external_name":"start_of_central_directory_location","restriction":"ZipLocation"},{"name":"central_directory_size","external_name":"central_directory_size","restriction":"ZipLocation"},{"name":"num_files_in_archive","external_name":"num_files_in_archive","restriction":"ZipLocation"},{"name":"comment","default_value":"\"\"","external_name":"comment","restriction":"String"}],"args_string":"(io : IO, start_of_central_directory_location : ZipLocation, central_directory_size : ZipLocation, num_files_in_archive : ZipLocation, comment : String = \"\")","args_html":"(io : IO, start_of_central_directory_location : <a href=\"../Zip64/Serializer/ZipLocation.html\">ZipLocation</a>, central_directory_size : <a href=\"../Zip64/Serializer/ZipLocation.html\">ZipLocation</a>, num_files_in_archive : <a href=\"../Zip64/Serializer/ZipLocation.html\">ZipLocation</a>, comment : String = <span class=\"s\">&quot;&quot;</span>)","location":{"filename":"src/zip64/serializer.cr","line_number":147,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L147"},"def":{"name":"write_end_of_central_directory","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"start_of_central_directory_location","external_name":"start_of_central_directory_location","restriction":"ZipLocation"},{"name":"central_directory_size","external_name":"central_directory_size","restriction":"ZipLocation"},{"name":"num_files_in_archive","external_name":"num_files_in_archive","restriction":"ZipLocation"},{"name":"comment","default_value":"\"\"","external_name":"comment","restriction":"String"}],"visibility":"Public","body":"zip64_eocdr_offset = start_of_central_directory_location.to_u64 + central_directory_size.to_u64\nzip64_required = (\n  (\n    central_directory_size > UInt32::MAX ||\n    start_of_central_directory_location > UInt32::MAX\n  ) ||\n  zip64_eocdr_offset > UInt32::MAX\n) ||\nnum_files_in_archive > UInt16::MAX\n\n\nif zip64_required\n  write_uint32_le(io, 101075792)\n  write_uint64_le(io, 44)\n  io.write(MADE_BY_SIGNATURE)\n  write_uint16_le(io, VERSION_NEEDED_TO_EXTRACT_ZIP64)\n  write_uint32_le(io, 0)\n  write_uint32_le(io, 0)\n  write_uint64_le(io, num_files_in_archive)\n  write_uint64_le(io, num_files_in_archive)\n  write_uint64_le(io, central_directory_size)\n\n\n  write_uint64_le(io, start_of_central_directory_location)\n\n\n\n  write_uint32_le(io, 117853008)\n  write_uint32_le(io, 0)\n  write_uint64_le(io, zip64_eocdr_offset)\n\n\n  write_uint32_le(io, 1)\nend\n\n\nwrite_uint32_le(io, 101010256)\nwrite_uint16_le(io, 0)\nwrite_uint16_le(io, 0)\n\n\nnum_entries = zip64_required ? UInt16::MAX : num_files_in_archive\nwrite_uint16_le(io, num_entries)\nwrite_uint16_le(io, num_entries)\n\nwrite_uint32_le(io, zip64_required ? UInt32::MAX : central_directory_size)\nwrite_uint32_le(io, zip64_required ? UInt32::MAX : start_of_central_directory_location)\n\n\nwrite_uint16_le(io, comment.bytesize)\nio.write(comment.to_slice)\n"},"external_var":false},{"html_id":"write_local_file_header(io:IO,filename:String,compressed_size:ZipFilesize,uncompressed_size:ZipFilesize,crc32:ZipCRC32,gp_flags:ZipGpFlags,mtime:Time,storage_mode:ZipStorageMode,additional_extra_fields:Bytes=Bytes.empty)-instance-method","name":"write_local_file_header","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"filename","external_name":"filename","restriction":"String"},{"name":"compressed_size","external_name":"compressed_size","restriction":"ZipFilesize"},{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":"ZipFilesize"},{"name":"crc32","external_name":"crc32","restriction":"ZipCRC32"},{"name":"gp_flags","external_name":"gp_flags","restriction":"ZipGpFlags"},{"name":"mtime","external_name":"mtime","restriction":"Time"},{"name":"storage_mode","external_name":"storage_mode","restriction":"ZipStorageMode"},{"name":"additional_extra_fields","default_value":"Bytes.empty","external_name":"additional_extra_fields","restriction":"Bytes"}],"args_string":"(io : IO, filename : String, compressed_size : ZipFilesize, uncompressed_size : ZipFilesize, crc32 : ZipCRC32, gp_flags : ZipGpFlags, mtime : Time, storage_mode : ZipStorageMode, additional_extra_fields : Bytes = Bytes.empty)","args_html":"(io : IO, filename : String, compressed_size : <a href=\"../Zip64/Serializer/ZipFilesize.html\">ZipFilesize</a>, uncompressed_size : <a href=\"../Zip64/Serializer/ZipFilesize.html\">ZipFilesize</a>, crc32 : <a href=\"../Zip64/Serializer/ZipCRC32.html\">ZipCRC32</a>, gp_flags : <a href=\"../Zip64/Serializer/ZipGpFlags.html\">ZipGpFlags</a>, mtime : Time, storage_mode : <a href=\"../Zip64/Serializer/ZipStorageMode.html\">ZipStorageMode</a>, additional_extra_fields : Bytes = <span class=\"t\">Bytes</span>.empty)","location":{"filename":"src/zip64/serializer.cr","line_number":38,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L38"},"def":{"name":"write_local_file_header","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"filename","external_name":"filename","restriction":"String"},{"name":"compressed_size","external_name":"compressed_size","restriction":"ZipFilesize"},{"name":"uncompressed_size","external_name":"uncompressed_size","restriction":"ZipFilesize"},{"name":"crc32","external_name":"crc32","restriction":"ZipCRC32"},{"name":"gp_flags","external_name":"gp_flags","restriction":"ZipGpFlags"},{"name":"mtime","external_name":"mtime","restriction":"Time"},{"name":"storage_mode","external_name":"storage_mode","restriction":"ZipStorageMode"},{"name":"additional_extra_fields","default_value":"Bytes.empty","external_name":"additional_extra_fields","restriction":"Bytes"}],"visibility":"Public","body":"requires_zip64 = (compressed_size > UInt32::MAX || uncompressed_size > UInt32::MAX)\n\nwrite_uint32_le(io, 67324752)\nif requires_zip64\n  write_uint16_le(io, VERSION_NEEDED_TO_EXTRACT_ZIP64)\nelse\n  write_uint16_le(io, VERSION_NEEDED_TO_EXTRACT)\nend\n\nwrite_uint16_le(io, gp_flags)\nwrite_uint16_le(io, storage_mode.to_u16)\nwrite_uint16_le(io, to_binary_dos_time(mtime))\nwrite_uint16_le(io, to_binary_dos_date(mtime))\nwrite_uint32_le(io, crc32)\n\n\n\nif requires_zip64\n  write_uint32_le(io, UInt32::MAX)\n  write_uint32_le(io, UInt32::MAX)\nelse\n  write_uint32_le(io, compressed_size)\n  write_uint32_le(io, uncompressed_size)\nend\n\n\nwrite_uint16_le(io, filename.bytesize)\n\nextra_fields_io = IO::Memory.new\n\n\n\n\n\nif requires_zip64\n  write_zip64_extra_for_local_file_header(extra_fields_io, compressed_size, uncompressed_size)\nend\nwrite_timestamp_extra_field(extra_fields_io, mtime)\nextra_fields_io.write(additional_extra_fields)\nextra_fields_io.rewind\n\nwrite_uint16_le(io, extra_fields_io.size)\nio.write(filename.to_slice)\nIO.copy(extra_fields_io, io)\n"},"external_var":false}],"types":[{"html_id":"zip64/Zip64/Serializer/ZipCRC32","path":"Zip64/Serializer/ZipCRC32.html","kind":"alias","full_name":"Zip64::Serializer::ZipCRC32","name":"ZipCRC32","abstract":false,"locations":[{"filename":"src/zip64/serializer.cr","line_number":7,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L7"}],"repository_name":"zip64","program":false,"enum":false,"alias":true,"aliased":"Int","aliased_html":"Int","const":false,"namespace":{"html_id":"zip64/Zip64/Serializer","kind":"class","full_name":"Zip64::Serializer","name":"Serializer"}},{"html_id":"zip64/Zip64/Serializer/ZipFilesize","path":"Zip64/Serializer/ZipFilesize.html","kind":"alias","full_name":"Zip64::Serializer::ZipFilesize","name":"ZipFilesize","abstract":false,"locations":[{"filename":"src/zip64/serializer.cr","line_number":6,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L6"}],"repository_name":"zip64","program":false,"enum":false,"alias":true,"aliased":"Int","aliased_html":"Int","const":false,"namespace":{"html_id":"zip64/Zip64/Serializer","kind":"class","full_name":"Zip64::Serializer","name":"Serializer"}},{"html_id":"zip64/Zip64/Serializer/ZipGpFlags","path":"Zip64/Serializer/ZipGpFlags.html","kind":"alias","full_name":"Zip64::Serializer::ZipGpFlags","name":"ZipGpFlags","abstract":false,"locations":[{"filename":"src/zip64/serializer.cr","line_number":8,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L8"}],"repository_name":"zip64","program":false,"enum":false,"alias":true,"aliased":"Int","aliased_html":"Int","const":false,"namespace":{"html_id":"zip64/Zip64/Serializer","kind":"class","full_name":"Zip64::Serializer","name":"Serializer"}},{"html_id":"zip64/Zip64/Serializer/ZipLocation","path":"Zip64/Serializer/ZipLocation.html","kind":"alias","full_name":"Zip64::Serializer::ZipLocation","name":"ZipLocation","abstract":false,"locations":[{"filename":"src/zip64/serializer.cr","line_number":5,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L5"}],"repository_name":"zip64","program":false,"enum":false,"alias":true,"aliased":"Int","aliased_html":"Int","const":false,"namespace":{"html_id":"zip64/Zip64/Serializer","kind":"class","full_name":"Zip64::Serializer","name":"Serializer"},"doc":"All of these are aliased to Int even though they do not have the same\ncapacity internally - this is done to prevent callers from having to downcast\nto a specific Int subtype manually. Write methods protect from overflows at runtime.","summary":"<p>All of these are aliased to Int even though they do not have the same capacity internally - this is done to prevent callers from having to downcast to a specific Int subtype manually.</p>"},{"html_id":"zip64/Zip64/Serializer/ZipStorageMode","path":"Zip64/Serializer/ZipStorageMode.html","kind":"alias","full_name":"Zip64::Serializer::ZipStorageMode","name":"ZipStorageMode","abstract":false,"locations":[{"filename":"src/zip64/serializer.cr","line_number":9,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/serializer.cr#L9"}],"repository_name":"zip64","program":false,"enum":false,"alias":true,"aliased":"Int","aliased_html":"Int","const":false,"namespace":{"html_id":"zip64/Zip64/Serializer","kind":"class","full_name":"Zip64::Serializer","name":"Serializer"}}]},{"html_id":"zip64/Zip64/Writer","path":"Zip64/Writer.html","kind":"class","full_name":"Zip64::Writer","name":"Writer","abstract":false,"superclass":{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/writer.cr","line_number":27,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L27"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"zip64/Zip64","kind":"module","full_name":"Zip64","name":"Zip64"},"doc":"Writes (streams) zip entries to an `IO`.\n\n### Example\n\n```\nrequire \"zip64\"\n\nFile.open(\"./file.zip\", \"w\") do |file|\n  Zip64::Writer.open(file) do |zip|\n    # Add a file with a String content\n    zip.add \"foo.txt\", \"contents of foo\"\n\n    # Add a file and write data to it through an IO\n    zip.add(\"bar.txt\") do |io|\n      io << \"contents of bar\"\n    end\n\n    # Add a file by referencing a file in the filesystem\n    # (the file is automatically closed after this call)\n    zip.add(\"baz.txt\", File.open(\"./some_file.txt\"))\n  end\nend\n```","summary":"<p>Writes (streams) zip entries to an <code>IO</code>.</p>","class_methods":[{"html_id":"open(io:IO,sync_close=false,&)-class-method","name":"open","doc":"Creates a new writer to the given *io*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new writer to the given <em>io</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":""}],"args_string":"(io : IO, sync_close = false, &)","args_html":"(io : IO, sync_close = <span class=\"n\">false</span>, &)","location":{"filename":"src/zip64/writer.cr","line_number":60,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L60"},"def":{"name":"open","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":""}],"yields":1,"block_arity":1,"visibility":"Public","body":"writer = new(io, sync_close: sync_close)\nbegin\n  yield writer\nensure\n  writer.close\nend\n"},"external_var":false},{"html_id":"open(filename:Path|String,&)-class-method","name":"open","doc":"Creates a new writer to the given *filename*, yields it to the given block,\nand closes it at the end.","summary":"<p>Creates a new writer to the given <em>filename</em>, yields it to the given block, and closes it at the end.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String, &)","args_html":"(filename : Path | String, &)","location":{"filename":"src/zip64/writer.cr","line_number":67,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L67"},"def":{"name":"open","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"yields":1,"block_arity":1,"visibility":"Public","body":"writer = new(filename)\nbegin\n  yield writer\nensure\n  writer.close\nend\n"},"external_var":false}],"constructors":[{"html_id":"new(io:IO,sync_close:Bool=false)-class-method","name":"new","doc":"Creates a new writer to the given *io*.","summary":"<p>Creates a new writer to the given <em>io</em>.</p>","abstract":false,"args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":"::Bool"}],"args_string":"(io : IO, sync_close : Bool = false)","args_html":"(io : IO, sync_close : Bool = <span class=\"n\">false</span>)","location":{"filename":"src/zip64/writer.cr","line_number":42,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L42"},"def":{"name":"new","args":[{"name":"io","external_name":"io","restriction":"IO"},{"name":"sync_close","default_value":"false","external_name":"sync_close","restriction":"::Bool"}],"visibility":"Public","body":"_ = allocate\n_.initialize(io, sync_close)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"},"external_var":false},{"html_id":"new(filename:Path|String)-class-method","name":"new","doc":"Creates a new writer to the given *filename*.","summary":"<p>Creates a new writer to the given <em>filename</em>.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String)","args_html":"(filename : Path | String)","location":{"filename":"src/zip64/writer.cr","line_number":54,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L54"},"def":{"name":"new","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"visibility":"Public","body":"new(::File.new(filename, \"w\"), sync_close: true)"},"external_var":false}],"instance_methods":[{"html_id":"add(filename:Path|String,&)-instance-method","name":"add","doc":"Adds an entry that will have the given *filename* and current\ntime (`Time.utc`) and yields an `IO` to write that entry's\ncontents.","summary":"<p>Adds an entry that will have the given <em>filename</em> and current time (<code>Time.utc</code>) and yields an <code>IO</code> to write that entry's contents.</p>","abstract":false,"args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"args_string":"(filename : Path | String, &)","args_html":"(filename : Path | String, &)","location":{"filename":"src/zip64/writer.cr","line_number":75,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L75"},"def":{"name":"add","args":[{"name":"filename","external_name":"filename","restriction":"Path | String"}],"yields":1,"block_arity":1,"visibility":"Public","body":"add(Entry.new(filename.to_s)) do |io|\n  yield io\nend"},"external_var":false},{"html_id":"add(entry:Entry,&)-instance-method","name":"add","doc":"Adds an Entry and yields `IO` for writing that entry's contents. After the IO\nhas been written and the block terminates will write out the accumulated CRC32\nfor the entry and the sizes as the data descriptor.\n\nEntry can be configured the same way as for `add()` without the block, however\nthe bit 3 of the general_purpose_bit_flag is going to be forcibly set, and the\ncompressed/uncompressed sizes and CRC32 are going to be reset to 0.","summary":"<p>Adds an Entry and yields <code>IO</code> for writing that entry's contents.</p>","abstract":false,"args":[{"name":"entry","external_name":"entry","restriction":"Entry"}],"args_string":"(entry : Entry, &)","args_html":"(entry : <a href=\"../Zip64/Writer/Entry.html\">Entry</a>, &)","location":{"filename":"src/zip64/writer.cr","line_number":88,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L88"},"def":{"name":"add","args":[{"name":"entry","external_name":"entry","restriction":"Entry"}],"yields":1,"block_arity":1,"visibility":"Public","body":"entry.general_purpose_bit_flag = entry.general_purpose_bit_flag | (1 << 3)\n\nadd(entry)\n\n\n\nentry_body_starts_at = @written.to_u64\nuncompressed_size_counter = Zip64::OutputCounter.new\ncrc32_writer = Zip64::CRC32Writer.new\ncase entry.compression_method\nwhen .stored?\n  output_io = IO::MultiWriter.new(@io, uncompressed_size_counter, crc32_writer)\n  yield output_io\nwhen .deflated?\n  deflater = Compress::Deflate::Writer.new(@io)\n  output_io = IO::MultiWriter.new(deflater, uncompressed_size_counter, crc32_writer)\n  yield output_io\n  deflater.close\nelse\n  raise(\"Unsupported compression method: #{entry.compression_method}\")\nend\n\nentry.crc32 = crc32_writer.to_u32\nentry.uncompressed_size = uncompressed_size_counter.bytes_written\nentry.compressed_size = @written.to_u64 - entry_body_starts_at\n\n\n@serializer.write_data_descriptor(io: @io, crc32: entry.crc32, compressed_size: entry.compressed_size, uncompressed_size: entry.uncompressed_size)\n"},"external_var":false},{"html_id":"add(filename_or_entry:Path|String|Entry,string:String):Nil-instance-method","name":"add","doc":"Adds an entry that will have *string* as its contents.","summary":"<p>Adds an entry that will have <em>string</em> as its contents.</p>","abstract":false,"args":[{"name":"filename_or_entry","external_name":"filename_or_entry","restriction":"Path | String | Entry"},{"name":"string","external_name":"string","restriction":"String"}],"args_string":"(filename_or_entry : Path | String | Entry, string : String) : Nil","args_html":"(filename_or_entry : Path | String | <a href=\"../Zip64/Writer/Entry.html\">Entry</a>, string : String) : Nil","location":{"filename":"src/zip64/writer.cr","line_number":158,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L158"},"def":{"name":"add","args":[{"name":"filename_or_entry","external_name":"filename_or_entry","restriction":"Path | String | Entry"},{"name":"string","external_name":"string","restriction":"String"}],"return_type":"Nil","visibility":"Public","body":"add(filename_or_entry) do |io|\n  io << string\nend"},"external_var":false},{"html_id":"add(filename_or_entry:Path|String|Entry,bytes:Bytes):Nil-instance-method","name":"add","doc":"Adds an entry that will have *bytes* as its contents.","summary":"<p>Adds an entry that will have <em>bytes</em> as its contents.</p>","abstract":false,"args":[{"name":"filename_or_entry","external_name":"filename_or_entry","restriction":"Path | String | Entry"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"args_string":"(filename_or_entry : Path | String | Entry, bytes : Bytes) : Nil","args_html":"(filename_or_entry : Path | String | <a href=\"../Zip64/Writer/Entry.html\">Entry</a>, bytes : Bytes) : Nil","location":{"filename":"src/zip64/writer.cr","line_number":165,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L165"},"def":{"name":"add","args":[{"name":"filename_or_entry","external_name":"filename_or_entry","restriction":"Path | String | Entry"},{"name":"bytes","external_name":"bytes","restriction":"Bytes"}],"return_type":"Nil","visibility":"Public","body":"add(filename_or_entry) do |io|\n  io.write(bytes)\nend"},"external_var":false},{"html_id":"add(filename_or_entry:Path|String|Entry,data:IO):Nil-instance-method","name":"add","doc":"Adds an entry that will have its data copied from the given *data*.\nIf the given *data* is a `::File`, it is automatically closed\nafter data is copied from it.","summary":"<p>Adds an entry that will have its data copied from the given <em>data</em>.</p>","abstract":false,"args":[{"name":"filename_or_entry","external_name":"filename_or_entry","restriction":"Path | String | Entry"},{"name":"data","external_name":"data","restriction":"IO"}],"args_string":"(filename_or_entry : Path | String | Entry, data : IO) : Nil","args_html":"(filename_or_entry : Path | String | <a href=\"../Zip64/Writer/Entry.html\">Entry</a>, data : IO) : Nil","location":{"filename":"src/zip64/writer.cr","line_number":174,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L174"},"def":{"name":"add","args":[{"name":"filename_or_entry","external_name":"filename_or_entry","restriction":"Path | String | Entry"},{"name":"data","external_name":"data","restriction":"IO"}],"return_type":"Nil","visibility":"Public","body":"add(filename_or_entry) do |io|\n  IO.copy(data, io)\n  if data.is_a?(::File)\n    data.close\n  end\nend"},"external_var":false},{"html_id":"add(entry:Entry)-instance-method","name":"add","doc":"Adds an Entry to the Writer and writes out its local file header.\n\nCalling the method without the block does not enable data descriptors, so the\nCRC32 for the entry has to be set upfront, as well as the correct `compressed_size`\nand `uncompressed_size`\n\nYou can choose the Entry's compression method before adding it.\nYou can also set the Entry's time (which is `Time.utc` by default)\n and extra data before adding it to the zip stream.","summary":"<p>Adds an Entry to the Writer and writes out its local file header.</p>","abstract":false,"args":[{"name":"entry","external_name":"entry","restriction":"Entry"}],"args_string":"(entry : Entry)","args_html":"(entry : <a href=\"../Zip64/Writer/Entry.html\">Entry</a>)","location":{"filename":"src/zip64/writer.cr","line_number":131,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L131"},"def":{"name":"add","args":[{"name":"entry","external_name":"entry","restriction":"Entry"}],"visibility":"Public","body":"if @filenames.includes?(entry.filename)\n  raise(DuplicateEntryFilename.new(\"Entry named #{entry.filename.inspect} has already been added to the archive\"))\nelse\n  @filenames.add(entry.filename)\nend\n\n\nif entry.filename.ascii_only?\nelse\n  entry.general_purpose_bit_flag = entry.general_purpose_bit_flag | (1 << 11)\nend\n\nentry.offset = @written.to_u64\n@serializer.write_local_file_header(io: @io, filename: entry.filename, compressed_size: entry.compressed_size, uncompressed_size: entry.uncompressed_size, crc32: entry.crc32, gp_flags: entry.general_purpose_bit_flag, mtime: entry.time, storage_mode: entry.compression_method.to_i, additional_extra_fields: entry.extra)\n@entries << entry\n"},"external_var":false},{"html_id":"add_dir(name):Nil-instance-method","name":"add_dir","doc":"Adds a directory entry that will have the given *name*.","summary":"<p>Adds a directory entry that will have the given <em>name</em>.</p>","abstract":false,"args":[{"name":"name","external_name":"name","restriction":""}],"args_string":"(name) : Nil","args_html":"(name) : Nil","location":{"filename":"src/zip64/writer.cr","line_number":182,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L182"},"def":{"name":"add_dir","args":[{"name":"name","external_name":"name","restriction":""}],"return_type":"Nil","visibility":"Public","body":"if name.ends_with?('/')\nelse\n  name = name + '/'\nend\nadd(Entry.new(name)) do\nend\n"},"external_var":false},{"html_id":"close:Nil-instance-method","name":"close","doc":"Closes this zip writer.","summary":"<p>Closes this zip writer.</p>","abstract":false,"location":{"filename":"src/zip64/writer.cr","line_number":188,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L188"},"def":{"name":"close","return_type":"Nil","visibility":"Public","body":"if @closed\n  return\nend\n@closed = true\n\ncentral_directory_at = @written.to_u64\nwrite_central_directory\n\nwrite_end_of_central_directory(central_directory_at, @written.to_u64 - central_directory_at)\nif @sync_close\n  @io.close\nend\n"},"external_var":false},{"html_id":"closed?:Bool-instance-method","name":"closed?","doc":"Returns `true` if this writer is closed.","summary":"<p>Returns <code>true</code> if this writer is closed.</p>","abstract":false,"location":{"filename":"src/zip64/writer.cr","line_number":36,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L36"},"def":{"name":"closed?","visibility":"Public","body":"@closed"},"external_var":false},{"html_id":"comment=(comment:String)-instance-method","name":"comment=","doc":"Sets the zip file comment","summary":"<p>Sets the zip file comment</p>","abstract":false,"args":[{"name":"comment","external_name":"comment","restriction":"::String"}],"args_string":"(comment : String)","args_html":"(comment : String)","location":{"filename":"src/zip64/writer.cr","line_number":39,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L39"},"def":{"name":"comment=","args":[{"name":"comment","external_name":"comment","restriction":"::String"}],"visibility":"Public","body":"@comment = comment"},"external_var":false},{"html_id":"simulate_write(by:Int)-instance-method","name":"simulate_write","doc":"Advance the internal offset by a number of bytes.\nThis can be useful for esimating the size of the resulting ZIP archive\nwithout having access to the contents of files that are going to be\nincluded in the archive later.","summary":"<p>Advance the internal offset by a number of bytes.</p>","abstract":false,"args":[{"name":"by","external_name":"by","restriction":"Int"}],"args_string":"(by : Int)","args_html":"(by : Int)","location":{"filename":"src/zip64/writer.cr","line_number":227,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L227"},"def":{"name":"simulate_write","args":[{"name":"by","external_name":"by","restriction":"Int"}],"visibility":"Public","body":"@written.simulate_write(by)"},"external_var":false},{"html_id":"sync_close=(sync_close:Bool)-instance-method","name":"sync_close=","doc":"Whether to close the enclosed `IO` when closing this writer.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this writer.</p>","abstract":false,"args":[{"name":"sync_close","external_name":"sync_close","restriction":"::Bool"}],"args_string":"(sync_close : Bool)","args_html":"(sync_close : Bool)","location":{"filename":"src/zip64/writer.cr","line_number":33,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L33"},"def":{"name":"sync_close=","args":[{"name":"sync_close","external_name":"sync_close","restriction":"::Bool"}],"visibility":"Public","body":"@sync_close = sync_close"},"external_var":false},{"html_id":"sync_close?:Bool-instance-method","name":"sync_close?","doc":"Whether to close the enclosed `IO` when closing this writer.","summary":"<p>Whether to close the enclosed <code>IO</code> when closing this writer.</p>","abstract":false,"location":{"filename":"src/zip64/writer.cr","line_number":33,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L33"},"def":{"name":"sync_close?","visibility":"Public","body":"@sync_close"},"external_var":false},{"html_id":"written-instance-method","name":"written","doc":"How many bytes have been written into the destination IO so far","summary":"<p>How many bytes have been written into the destination IO so far</p>","abstract":false,"location":{"filename":"src/zip64/writer.cr","line_number":232,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L232"},"def":{"name":"written","visibility":"Public","body":"@written.to_u64"},"external_var":false}],"types":[{"html_id":"zip64/Zip64/Writer/DuplicateEntryFilename","path":"Zip64/Writer/DuplicateEntryFilename.html","kind":"class","full_name":"Zip64::Writer::DuplicateEntryFilename","name":"DuplicateEntryFilename","abstract":false,"superclass":{"html_id":"zip64/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},"ancestors":[{"html_id":"zip64/ArgumentError","kind":"class","full_name":"ArgumentError","name":"ArgumentError"},{"html_id":"zip64/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/writer.cr","line_number":29,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L29"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"namespace":{"html_id":"zip64/Zip64/Writer","kind":"class","full_name":"Zip64::Writer","name":"Writer"},"doc":"Gets raised if you try to add the same filename to a ZIP archive twice","summary":"<p>Gets raised if you try to add the same filename to a ZIP archive twice</p>"},{"html_id":"zip64/Zip64/Writer/Entry","path":"Zip64/Writer/Entry.html","kind":"class","full_name":"Zip64::Writer::Entry","name":"Entry","abstract":false,"superclass":{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"zip64/Zip64/FileInfo","kind":"module","full_name":"Zip64::FileInfo","name":"FileInfo"},{"html_id":"zip64/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"zip64/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/zip64/writer.cr","line_number":237,"url":"https://github.com/crystal-garage/crystal-zip64/blob/2a02573d93d94f7fbdbc7a0a6a445325f5a71d95/src/zip64/writer.cr#L237"}],"repository_name":"zip64","program":false,"enum":false,"alias":false,"const":false,"included_modules":[{"html_id":"zip64/Zip64/FileInfo","kind":"module","full_name":"Zip64::FileInfo","name":"FileInfo"}],"namespace":{"html_id":"zip64/Zip64/Writer","kind":"class","full_name":"Zip64::Writer","name":"Writer"},"doc":"An entry to write into a `Zip64::Writer`.","summary":"<p>An entry to write into a <code><a href=\"../../Zip64/Writer.html\">Zip64::Writer</a></code>.</p>"}]}]}]}})